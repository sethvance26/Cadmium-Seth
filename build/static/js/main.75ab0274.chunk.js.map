{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","images/cadmium-images/logo.png","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","utils/mutations.js","pages/EventForm.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/Map/Map.js","App.js","images/GalleryImage2.jpg","serviceWorker.js","index.js"],"names":["UPDATE_EVENTS","ADD_TO_LIST","ADD_MULTIPLE_TO_LIST","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","reducer","state","action","type","events","listOpen","list","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","cart","cartOpen","categories","currentCategory","useReducer","dispatch","useStoreContext","useContext","EventItem","QUERY_EVENTS","gql","QUERY_USER","QUERY_CHECKOUT","styles","headerStyle","textAlign","fontFamily","fontSize","listStyle","listStyleType","cardStyle","display","justifyContent","EventList","useQuery","loading","data","console","log","className","style","map","description","name","locationAddress","locationName","link","address2","imageLink","zip","date","Card","width","Content","Header","Meta","Description","href","FacebookShareButton","quote","url","hashtag","FacebookIcon","size","round","TwitterShareButton","title","TwitterIcon","LinkedinShareButton","LinkedinIcon","PinterestShareButton","PinterestIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","subject","EmailIcon","RedditShareButton","RedditIcon","Icon","onClick","src","spinner","alt","CategoryMenu","CartItem","item","image","price","placeholder","purchaseQuantity","onChange","e","target","_id","idbPromise","parseInt","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","a","length","getCart","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","eventIds","i","push","variables","Home","Image","to","ADD_EVENT","LOGIN","ADD_USER","titleStyle","paddingBottom","options","key","text","FormExampleFieldControl","useState","setDateValue","formState","setFormState","history","useHistory","useMutation","addEvent","handleChange","prevState","handleFormSubmit","preventDefault","toLocaleString","streetAddress","eventDescription","mutationResponse","Form","onSubmit","Group","widths","Field","control","Input","label","Select","selected","showTimeSelect","dateFormat","TextArea","Button","Detail","id","useParams","currentEvent","setCurrentEvent","find","event","indexedEvents","category","itemInCart","cartItem","disabled","p","Jumbotron","children","height","clear","paddingTop","NoMatch","Login","email","password","login","error","htmlFor","Signup","addUser","username","Nav","logout","Success","setTimeout","saveEvent","OrderHistory","user","firstName","lastName","orders","order","purchaseDate","toLocaleDateString","products","index","Map","latitude","longitude","zoom","viewport","setViewport","process","REACT_APP_MAPBOX_ACCESS_TOKEN","mapboxApiAccessToken","onViewportChange","nextViewport","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","WithAuth","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.75ab0274.chunk.js","sourcesContent":["export const UPDATE_EVENTS = \"UPDATE_EVENTS\";\r\n\r\nexport const QUERY_EVENTS = \"QUERY_EVENTS\";\r\nexport const ADD_TO_LIST = \"ADD_TO_LIST\"; \r\nexport const ADD_MULTIPLE_TO_LIST = \"ADD_MULTIPLE_TO_LIST\"; \r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_LIST\"; //maybe we don't need this? users shouldn't be allowed to delete.\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  QUERY_EVENTS,\r\n  UPDATE_EVENTS,\r\n  ADD_TO_LIST,\r\n  // UPDATE_CART_QUANTITY,\r\n  // REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_LIST,\r\n  // UPDATE_CATEGORIES,\r\n  // UPDATE_CURRENT_CATEGORY,\r\n  // CLEAR_CART,\r\n  // TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: [...action.events],\r\n      };\r\n    case QUERY_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: [...action.events],\r\n      };\r\n\r\n      case ADD_TO_LIST:\r\n      return {\r\n        ...state,\r\n        listOpen: true,\r\n        list: [...state.list, action.events],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_LIST:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, ...action.events],\r\n      };\r\n\r\n\r\n\r\n    // case UPDATE_CART_QUANTITY:\r\n    //   return {\r\n    //     ...state,\r\n    //     cartOpen: true,\r\n    //     cart: state.cart.map(product => {\r\n    //       if (action._id === product._id) {\r\n    //         product.purchaseQuantity = action.purchaseQuantity\r\n    //       }\r\n    //       return product\r\n    //     })\r\n    //   };\r\n\r\n    // case REMOVE_FROM_CART:\r\n    //   let newState = state.cart.filter(product => {\r\n    //     return product._id !== action._id;\r\n    //   });\r\n\r\n    //   return {\r\n    //     ...state,\r\n    //     cartOpen: newState.length > 0,\r\n    //     cart: newState\r\n    //   };\r\n\r\n    // case CLEAR_CART:\r\n    //   return {\r\n    //     ...state,\r\n    //     cartOpen: false,\r\n    //     cart: []\r\n    //   };\r\n\r\n    // case TOGGLE_CART:\r\n    //   return {\r\n    //     ...state,\r\n    //     cartOpen: !state.cartOpen\r\n    //   };\r\n\r\n    // case UPDATE_CATEGORIES:\r\n    //   return {\r\n    //     ...state,\r\n    //     categories: [...action.categories],\r\n    //   };\r\n\r\n    // case UPDATE_CURRENT_CATEGORY:\r\n    //   return {\r\n    //     ...state,\r\n    //     currentCategory: action.currentCategory\r\n    //   }\r\n\r\n    // default:\r\n    //   return state;\r\n  }\r\n};\r\n\r\nexport function useEventReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}","import React, { createContext, useContext } from \"react\";\r\nimport { useEventReducer } from './reducers'\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useEventReducer({\r\n    events: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_LIST, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nfunction EventItem(item) {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const {\r\n    date,\r\n    name,\r\n    _id,\r\n    description,\r\n    locationName,\r\n    link,\r\n    category,\r\n    locationAddress,\r\n    imageLink\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToList = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_LIST,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/events/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          // src={`/images/${image}`}\r\n          \r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        {description}\r\n        {locationName}\r\n        {locationAddress}\r\n        {category}\r\n        {date}\r\n        {imageLink}\r\n        {link}\r\n\r\n      </div>\r\n      {/* <div>\r\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n      </div> */}\r\n      <button onClick={addToList}>Add to List</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventItem;\r\n","//change queries from products to events based on events model that CRS wrote\r\n//need to think through checkout/categories and how to convert/adapt or delete\r\n//user query and model should be fine\r\n\r\n//queries are the GET (Read only fetch)\r\n\r\nimport { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_EVENTS = gql`\r\n\r\n {\r\n  events {\r\n    _id\r\n    name\r\n    description\r\n    locationName\r\n    link\r\n    locationAddress\r\n    imageLink\r\n    address2\r\n    state\r\n    zip\r\n    date\r\n\r\n  }\r\n}\r\n\r\n`;\r\n\r\n// category\r\n// imageLink\r\n// date\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      username\r\n      lists {\r\n        _id\r\n        savedDate\r\n        events {\r\n          _id\r\n          title\r\n          date\r\n          description\r\n          locationName\r\n          locationAddress\r\n          category {\r\n            _id\r\n          }\r\n          link\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//dont need from here down\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","export default __webpack_public_path__ + \"static/media/logo.9d5b8347.png\";","import React, { useEffect } from \"react\";\r\nimport ProductItem from \"../ProductItem\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { UPDATE_EVENTS } from \"../../utils/actions\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_EVENTS } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport image from \"../../images/cadmium-images/logo.png\";\r\nimport style from \"./list.css\";\r\nimport {\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  EmailShareButton,\r\n  TwitterShareButton,\r\n  PinterestShareButton,\r\n  WhatsappShareButton,\r\n  RedditShareButton,\r\n  FacebookIcon,\r\n  LinkedinIcon,\r\n  EmailIcon,\r\n  TwitterIcon,\r\n  PinterestIcon,\r\n  WhatsappIcon,\r\n  RedditIcon,\r\n} from \"react-share\";\r\n\r\n// const CardExampleCard = () => {\r\n//   return(\r\n//   <Card>\r\n//     <CardContent>\r\n//       <CardHeader>Event 1</CardHeader>\r\n//       <CardMeta>\r\n//         <span>description</span>\r\n//       </CardMeta>\r\n//     </CardContent>\r\n\r\n//   </Card>\r\n//   )\r\n\r\n// }\r\n\r\nconst styles = {\r\n  headerStyle: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"Rajdhani\",\r\n    fontSize: \"50px\",\r\n  },\r\n  listStyle: {\r\n    listStyleType: \"none\",\r\n  },\r\n  cardStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n};\r\n\r\nfunction EventList() {\r\n  const [state, dispatch] = useStoreContext();\r\n  const { currentCategory } = state;\r\n  const { loading, data } = useQuery(QUERY_EVENTS);\r\n  const events = data;\r\n  console.log(\"data\", data);\r\n\r\n  return (\r\n    <div className=\"evt-cards\">\r\n      <h2 style={styles.headerStyle}>Check out these upcoming events!</h2>\r\n\r\n      {events ? (\r\n        events.events.map(\r\n          ({\r\n            description,\r\n            name,\r\n            locationAddress,\r\n            locationName,\r\n            link,\r\n            imageLink,\r\n            address2,\r\n            state,\r\n            zip,\r\n            date,\r\n          }) => (\r\n            <div className=\"card card-1\">\r\n              <Card style={{ width: \"18rem\" }}>\r\n                   <Card.Content>\r\n                  <Card.Header>{name}</Card.Header>\r\n                  <Card.Meta>{locationName}</Card.Meta>\r\n                  <Card.Description>{description}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                  <Card.Description>{locationAddress}</Card.Description>\r\n                  <Card.Description>{address2}</Card.Description>\r\n                  <Card.Description>{state}</Card.Description>\r\n                  <Card.Description>{zip}</Card.Description>\r\n\r\n                  <Card.Description>{date}</Card.Description>\r\n                  <br></br>\r\n                  <a href={link}>Link To Event</a>\r\n                </Card.Content>\r\n                <div>\r\n                  <FacebookShareButton\r\n                    quote=\"Check out this cool art event I found through Cadmium!\"\r\n                    url={link}\r\n                    hashtag=\"#CadmiumRVA\"\r\n                  >\r\n                    <FacebookIcon size={30} round />\r\n                  </FacebookShareButton>\r\n                  <TwitterShareButton\r\n                    title=\"Check out this cool art event I found through Cadmium\"\r\n                    url={link}\r\n                    hashtag=\"#CadmiumRVA\"\r\n                  >\r\n                    <TwitterIcon size={30} round />\r\n                  </TwitterShareButton>\r\n                  <LinkedinShareButton\r\n                    title=\"Check out this cool art event I found through Cadmium\"\r\n                    url={link}\r\n                  >\r\n                    <LinkedinIcon size={30} round />\r\n                  </LinkedinShareButton>\r\n                  <PinterestShareButton\r\n                    title=\"Check out this cool art event I found through Cadmium\"\r\n                    url={link}\r\n                  >\r\n                    <PinterestIcon size={30} round />\r\n                  </PinterestShareButton>\r\n                  <WhatsappShareButton\r\n                    title=\"Check out this cool art event I found through Cadmium\"\r\n                    url={link}\r\n                  >\r\n                    <WhatsappIcon size={30} round />\r\n                  </WhatsappShareButton>\r\n                  <EmailShareButton\r\n                    title=\"Check out this cool art event I found through Cadmium\"\r\n                    url={link}\r\n                    subject=\"Your saved events via Cadmium\"\r\n                  >\r\n                    <EmailIcon size={30} round />\r\n                  </EmailShareButton>\r\n                  <RedditShareButton\r\n                    title=\"Check out this cool art event I found through Cadmium\"\r\n                    url={link}\r\n                  >\r\n                    <RedditIcon size={30} round />\r\n                  </RedditShareButton>\r\n                </div>\r\n\r\n                <br></br>\r\n                <button className=\"heart icon hr large own-class\">\r\n                  <Icon name=\"heart\" onClick=\"\" />\r\n                  Save Event\r\n                </button>\r\n              </Card>\r\n            </div>\r\n          )\r\n        )\r\n      ) : (\r\n        <h3> You haven't added any events yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport CartItem from \"../CartItem\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_LIST } from \"../../utils/actions\";\r\nimport \"./style.css\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\nconst Cart = () => {\r\n  const [state, dispatch] = useStoreContext();\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise(\"cart\", \"get\");\r\n      dispatch({ type: ADD_MULTIPLE_TO_LIST, events: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const eventIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        eventIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { events: eventIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Event List</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Map Events</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your list yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\nimport Image from \"../images/cadmium-images/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardContent } from \"semantic-ui-react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container sign-in-buttons\">\r\n      {/* <CategoryMenu />\r\n      <ProductList />\r\n      <Cart /> */}\r\n\r\n      <center>\r\n        <img src={Image} alt=\"logo\" />\r\n      </center>\r\n      <div className=\"container my-1 home-button\">\r\n        <center>\r\n          <Link to=\"/signup\">\r\n            <h2 className=\"home-button\">Signup</h2>\r\n          </Link>\r\n        </center>\r\n      </div>\r\n\r\n      <div className=\"container my-1 \">\r\n        <center>\r\n          <Link to=\"login\">\r\n            <h2 className=\"home-button\">Login</h2>\r\n          </Link>\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { gql } from \"@apollo/client\";\r\n//add event here\r\n//then add to actions on front end and go to backend typedefs and resolvers\r\n\r\n//Mutations are the CUD\r\n//Add event, login, create user, delete event by id\r\n\r\nexport const ADD_EVENT = gql`\r\n  mutation addEvent($name: String, $description: String, $locationName: String,\r\n  $locationAddress: String, $imageLink: String, $link: String, $address2: String, $state: String, $zip: String, $date: String) {\r\n    addEvent(name: $name, description: $description, locationName: $locationName, locationAddress: $locationAddress,\r\n    link: $link, imageLink: $imageLink, address2: $address2, state: $state, zip: $zip, date: $date) {\r\n      _id\r\n      name\r\n      description\r\n      locationName\r\n      link\r\n      locationAddress\r\n      imageLink\r\n      address2\r\n      state\r\n      zip\r\n      date\r\n    }\r\n  }\r\n`;\r\n\r\n// export const DELETE_EVENT = gql`\r\n// mutation deleteEvent($name: String!) {\r\n//   deleteEvent(name: $name) {\r\n\r\n//   }\r\n// }\r\n// `\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(\r\n      username: $username\r\n\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// export const ADD_ORDER = gql`\r\n//   mutation addOrder($products: [ID]!) {\r\n//     addOrder(products: $products) {\r\n//       purchaseDate\r\n//       products {\r\n//         _id\r\n//         name\r\n//         description\r\n//         price\r\n//         quantity\r\n//         category {\r\n//           name\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n// import Auth from '../utils/auth';\r\nimport { ADD_EVENT } from \"../utils/mutations\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  TextArea,\r\n} from \"semantic-ui-react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst styles = {\r\n  titleStyle: {\r\n    textAlign: \"center\",\r\n    fontFamily: \"Rajdhani\",\r\n    fontSize: \"50px\",\r\n    paddingBottom: \"50px\",\r\n  },\r\n  listStyle: {\r\n    listStyleType: \"none\",\r\n  },\r\n};\r\n\r\n// import datePicker from \"../utils/helpers\";\r\n\r\nconst options = [\r\n  { key: \"g\", text: \"Gallery/Museum Opening\", value: \"gallery/museum opening\" },\r\n  { key: \"a\", text: \"Artist Talk\", value: \"artist talk\" },\r\n  { key: \"o\", text: \"Open Studios\", value: \"open studios\" },\r\n  { key: \"f\", text: \"Film Screening\", value: \"film screening\" },\r\n  { key: \"p\", text: \"Performance\", value: \"performance\" },\r\n];\r\n\r\nfunction FormExampleFieldControl() {\r\n  const [dateValue, setDateValue] = useState(\"\");\r\n  const [formState, setFormState] = useState({});\r\n  const history = useHistory();\r\n  const [addEvent] = useMutation(ADD_EVENT);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.name);\r\n    const { name, value } = e.target;\r\n    if (!name && !value) return;\r\n    setFormState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  console.log(formState);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      console.log(\"form state\", formState);\r\n      const date = formState.date.toLocaleString();\r\n      const mutationResponse = await addEvent({\r\n        variables: {\r\n          name: formState.name,\r\n          locationName: formState.locationName,\r\n          locationAddress: formState.streetAddress,\r\n          description: formState.eventDescription,\r\n          link: formState.link,\r\n          imageLink: formState.imageLink,\r\n          address2: formState.address2,\r\n          state: formState.state,\r\n          zip: formState.zip,\r\n          date,\r\n\r\n          //category\r\n        },\r\n      });\r\n      history.push(\"/events\");\r\n      console.log(\"what is this\", mutationResponse);\r\n      return mutationResponse;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-container\">\r\n      <Form onSubmit={handleFormSubmit}>\r\n        <div  className=\"form-margin-style\">\r\n          <h1 style={styles.titleStyle}>Add Your Art Event Here!</h1>\r\n          <Form.Group widths=\"equal\" className=\"form-text\">\r\n            <Form.Field\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              control={Input}\r\n              name=\"name\"\r\n              label=\"Event Name\"\r\n              placeholder=\"Event Name\"\r\n            />\r\n            <Form.Field\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              control={Input}\r\n              name=\"locationName\"\r\n              label=\"Location Name\"\r\n              placeholder=\"Location Name\"\r\n            />\r\n            <Form.Field\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"eventType\"\r\n              control={Select}\r\n              label=\"Event Type\"\r\n              options={options}\r\n              placeholder=\"Event Type\"\r\n              className=\"form-text\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"streetAddress\"\r\n              label=\"Street\"\r\n              placeholder=\"Enter a Location\"\r\n              width={15}\r\n            />\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"address2\"\r\n              label=\"Address\"\r\n              width={8}\r\n            />\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"city\"\r\n              label=\"City\"\r\n              placeholder=\"City\"\r\n              width={15}\r\n            />\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"state\"\r\n              label=\"State\"\r\n              placeholder=\"State\"\r\n              width={10}\r\n            />\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"zip\"\r\n              label=\"Zip\"\r\n              placeholder=\"Zip\"\r\n              width={10}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Field>\r\n              <label>Date / Time</label>\r\n              <DatePicker\r\n                selected={formState.date}\r\n                onChange={(date) => {\r\n                  setDateValue(date);\r\n                  console.log(date);\r\n                  handleChange({ target: { name: \"date\", value: date } });\r\n                }}\r\n                showTimeSelect\r\n                className=\"date-picker\"\r\n                dateFormat=\"MMMM d, yyyy h:mm\"\r\n              />\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"link\"\r\n              label=\"Link\"\r\n              placeholder=\"Link\"\r\n              width={12}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Input\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n              }}\r\n              name=\"imageLink\"\r\n              label=\"Image Link\"\r\n              placeholder=\"Image Link\"\r\n              width={12}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n            name=\"eventDescription\"\r\n            control={TextArea}\r\n            label=\"Event Description\"\r\n            placeholder=\"Tell us more about your event...\"\r\n          />\r\n          <Form.Field control={Button} type=\"submit\">\r\n            Submit\r\n          </Form.Field>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormExampleFieldControl;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nimport Cart from \"../components/Cart\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_LIST,\r\n  UPDATE_EVENTS,\r\n} from \"../utils/actions\";\r\nimport { QUERY_EVENTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from \"../assets/spinner.gif\";\r\n\r\nfunction Detail() {\r\n  const [state, dispatch] = useStoreContext();\r\n  const { id } = useParams();\r\n\r\n  const [currentEvent, setCurrentEvent] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_EVENTS);\r\n\r\n  const { events, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (events.length) {\r\n      setCurrentEvent(events.find((event) => event._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_EVENTS,\r\n        events: data.events,\r\n      });\r\n\r\n      data.events.forEach((event) => {\r\n        idbPromise(\"events\", \"put\", event);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise(\"events\", \"get\").then((indexedEvents) => {\r\n        dispatch({\r\n          type: UPDATE_EVENTS,\r\n          events: indexedEvents,\r\n        });\r\n      });\r\n    }\r\n  }, [events, data, loading, dispatch, id]);\r\n\r\n  const addToList = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_LIST,\r\n        event: { ...currentEvent, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...currentEvent, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentEvent._id,\r\n    });\r\n\r\n    idbPromise(\"cart\", \"delete\", { ...currentEvent });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentEvent && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">← Back to Events</Link>\r\n\r\n          <h2>{currentEvent.name}</h2>\r\n\r\n          <p>{currentEvent.description}</p>\r\n          <p>{currentEvent.date}</p>\r\n          <p>{currentEvent.locationName}</p>\r\n          <p>{currentEvent.link}</p>\r\n          <p>{currentEvent.category}</p>\r\n          <p>{currentEvent.imageLink}</p>\r\n          <p>{currentEvent.locationAddress}</p>\r\n\r\n          <p>\r\n            {/* <strong>Price:</strong>${currentProduct.price}{' '} */}\r\n            <button onClick={addToList}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentEvent._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from List\r\n            </button>\r\n          </p>\r\n\r\n          <img src={`/images/${currentEvent.image}`} alt={currentEvent.name} />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n     {/* <Link to=\"/signup\">← Go to Signup</Link> */}\r\n\r\n      <center><h2>Login</h2></center>\r\n      <form onSubmit={handleFormSubmit}>\r\n      <div className=\"flex-row space-between my-2\">\r\n         <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../utils/auth\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [addUser] = useMutation(ADD_USER);\r\n  const history = useHistory();\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        username: formState.username,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      {/* <Link to=\"/login\">← Go to Login</Link> */}\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            placeholder=\"username\"\r\n            name=\"username\"\r\n            type=\"username\"\r\n            id=\"username\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {/* <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div> */}\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\" className=\"signup-button\">Submit</button>\r\n        </div>\r\n        {/* <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\" onClick={(e) => {\r\n            history.push('./events')\r\n          }}\r\n          >Submit</button>\r\n        </div> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1 nav-items-style\">\r\n            <Link to=\"/event-form\">Add an Event!</Link>\r\n          </li>\r\n\r\n          <li className=\"nav-items-style\">\r\n            <Link to=\"/events\">Events</Link>\r\n          </li>\r\n          <li className=\"mx-1 nav-items-style\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <Link to=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row list-decoration\">\r\n          <li className=\"mx-1 fix-margin\">\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </li>\r\n          <li className=\"mx-1 nav-items-style\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1 className=\"nav-items-style\">\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"cadmium logo\"></span>\r\n          <Link to=\"./public/images/cadmium-images/logo.png\"></Link>\r\n          Home\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>{showNavigation()}</nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_EVENT } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addEvent] = useMutation(ADD_EVENT);\r\n\r\n  useEffect(() => {\r\n    async function saveEvent() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const events = cart.map((item) => item._id);\r\n\r\n      if (events.length) {\r\n        const { data } = await addEvent({ variables: { events } });\r\n        const eventData = data.addEvent.events;\r\n\r\n        eventData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveEvent();\r\n  }, [addEvent]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Your event was added!</h2>\r\n        <h2>You will now be redirected to the events page.</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Events Page</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactMapGL from \"react-map-gl\";\r\n\r\nfunction Map() {\r\n  const [viewport, setViewport] = useState({\r\n    width: 700,\r\n    height: 700,\r\n    latitude: 37.54129,\r\n    longitude: -77.434769,\r\n    zoom: 12,\r\n  });\r\n  \r\n  console.log(process.env);\r\n\r\n  console.log(\"map\", process.env.REACT_APP_MAPBOX_ACCESS_TOKEN);\r\n\r\n  return (\r\n    <ReactMapGL\r\n      {...viewport}\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\r\n      onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport FormExampleFieldControl from \"./pages/EventForm\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\nimport { StoreProvider } from \"./utils/GlobalState\";\r\nimport Success from \"./pages/Success\";\r\nimport OrderHistory from \"./pages/OrderHistory\";\r\nimport Map from \"./components/Map/Map\";\r\nimport background from \"../src/images/GalleryImage2.jpg\";\r\nimport EventList from \"./components/ProductList/index\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"id_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst WithAuth = ({ children }) => {\r\n  const history = useHistory();\r\n  const isLoggedIn = true;\r\n  // localStorage.getItem('id_token'); //here you would check for the token\r\n  if (!isLoggedIn) {\r\n    history.push(\"/login\");\r\n    return <div>You are not authorized to view this page.</div>;\r\n    // above we are returning a div about authendictaion but we could also redirect them to the login page with history.push\r\n    //redirect to home page useHistory react dom push address to /login or /\r\n  }\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <StoreProvider>\r\n            <WithAuth>\r\n              <Nav />\r\n            </WithAuth>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/signup\" component={Signup} />\r\n              <Route exact path=\"/success\" component={Success} />\r\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\r\n              <Route exact path=\"/map\" component={Map} />\r\n\r\n              {/* <WithAuth>\r\n                <Map />\r\n              </WithAuth> */}\r\n              <Route exact path=\"/products/:id\" component={Detail} />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/event-form\"\r\n                component={FormExampleFieldControl}\r\n              />\r\n              <Route exact path=\"/events\" component={EventList}>\r\n                {/* <WithAuth>\r\n                  <EventList />\r\n                </WithAuth> */}\r\n              </Route>\r\n\r\n              {/* <WithAuth>\r\n                  <FormExampleFieldControl/>\r\n                </WithAuth> */}\r\n\r\n              {/* <Route exact path=\"/events\" component={EventList} /> */}\r\n\r\n              {/* <Route exact path=\"/events\" component={EventList}/> */}\r\n              {/* <EventList/> */}\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n            {/* <img className=\"background\" src={background} alt=\"background...\" /> */}\r\n          </StoreProvider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/GalleryImage2.5dd55bf8.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}